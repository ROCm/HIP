import os
import sys
import subprocess

root_dir = os.path.dirname(os.path.dirname(__file__))

doxygen_dir = os.environ.get('HIP_DOXYGEN_OUTDIR', None)
if doxygen_dir is None:
    doxygen_dir = os.path.join(root_dir, 'build', 'docs', 'doxygen')
    os.environ['HIP_DOXYGEN_OUTDIR'] = doxygen_dir

read_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'
if read_the_docs_build:
    os.makedirs(doxygen_dir, exist_ok=True)
    subprocess.check_call(['doxygen', 'docs/Doxyfile'], cwd=root_dir)

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '4.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'breathe',
#    'sphinx_book_theme',
    'sphinx_external_toc',
    'm2r2',
]

breathe_projects = { 'HIP': os.path.join(doxygen_dir, 'xml') }
breathe_default_project = 'HIP'
breathe_domain_by_extension = {
    'h' : 'c',
    'hpp' : 'cpp',
}

external_toc_path = '_toc.yml'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
#source_suffix = ['.rst', '.md']
source_suffix = {
    '.rst': 'restructuredtext',
    '.md': 'markdown',
}

# The root toctree document.
root_doc = 'index'

# General information about the project.
project = u'HIP'
copyright = u'2022, Advanced Micro Devices'
author = u'Advanced Micro Devices'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'5.5'
# The full version, including alpha/beta/rc tags.
release = u'5.5.0'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
#html_theme = 'sphinx_book_theme'
#html_title = project
#html_theme_options = {
#    'home_page_in_toc': True,
#    'use_edit_page_button': True,
#    'repository_url': 'https://github.com/ROCm-Developer-Tools/HIP',
#    'path_to_docs': 'docs',
#}

#if read_the_docs_build:
#    html_theme = 'default'
#else:
import sphinx_rtd_theme
html_theme = "sphinx_rtd_theme"
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
#html_theme_options = {
#   'navigation_depth': 4,
#   'prev_next_buttons_location': 'both',
#   'display_version': True,
#   'collapse_navigation': False,
#

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
# html_sidebars = {
#     '**': [
#         'relations.html',  # needs 'show_related': True theme option to display
#         'searchbox.html',
#     ]
# }


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'hipdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    'preamble': '\setcounter{tocdepth}{5}',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (root_doc, 'hip.tex', u'HIP Documentation',
     u'Advanced Micro Devices', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (root_doc, 'hip', u'HIP Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (root_doc, 'HIP', u'HIP Documentation',
     author, 'HIP development team', 'C++ Heterogeneous-Compute Interface for Portability',
     'Miscellaneous'),
]
